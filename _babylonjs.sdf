## Babylon.js

!image(./assets/babylonjs/babylonjs.png | height="40%")

## Historique

<table style="margin-top: 40px">
<tr>
<td style="padding: 20px">
OpenGL en 1992 par Silicon Graphics
</td>
<td style="background: white; padding: 20px">
!image(assets/babylonjs/OpenGL_logo.svg.png | width="200px")
</td>
</tr>
<tr>
<td style="padding: 20px">
Concurrence avec DirectX
</td>
<td style="background: white; padding: 20px">
!image(assets/babylonjs/Microsoft-DirectX-Logo-wordmark.svg | width="200px")
</td>
</tr>
<tr>
<td style="padding: 20px">
Vulkan en 2016
</td>
<td style="background: white; padding: 20px">
!image(assets/babylonjs/Vulkan.svg | width="200px")
</td>
</tr>
</table>

/*
Des jeux comme Quake, Half-life 2, Red Dead Redemption 2, ...
Cross plateform
*/

/*
DirectX, que sur windows, depuis 2020, une promesse de passer sur linux (wsl)
*/

## Moteurs 3D web .[babylon]

<table style="margin-top: 40px">
<tr>
<td style="padding: 20px">
Three.js depuis 2010
</td>
<td style="background: white; padding: 20px">
!image(assets/babylonjs/Threejs.svg | width="100px")
</td>
</tr>
<tr>
<td style="padding: 20px">
WebGL depuis 2011
</td>
<td style="background: white; padding: 20px">
!image(assets/babylonjs/WebGL_Logo.svg | width="100px")
</td>
</tr>
<tr>
<td style="padding: 20px">
Babylon.js depuis 2015
</td>
<td style="background: white; padding: 20px">
!image(assets/babylonjs/babylonjs.png | width="100px")
</td>
</tr>
</table>

## Principal concurrent : Three.js .[babylon]

5 ans d'expériences de plus

Poussé depuis 2020 par ``react-three-fiber``

## Three.js vs Babylon.js .[babylon]

Comment fait-on un cylindre ?

!image(assets/babylonjs/cylinder.png)

## cylinder.three.js .[babylon]

<pre>
<code class="language-javascript">
const geometry = new THREE.CylinderGeometry( 5, 5, 20, 32 );
</code>
</pre>
<pre>
<code class="language-javascript">
const material = new THREE.MeshBasicMaterial( {color: 0xffff00} ); 
</code>
</pre>
<pre>
<code class="language-javascript">
const cylinder = new THREE.Mesh( geometry, material );
</code>
</pre>
<pre>
<code class="language-javascript">
scene.add( cylinder );
</code>
</pre>

/*
radiusTop : Float, radiusBottom : Float, height : Float, radialSegments : Integer
*/

## cylinder.babylon.js .[babylon]

<pre>
<code class="language-javascript">
const myMaterial = new BABYLON.StandardMaterial( "myMaterial", scene );
myMaterial.diffuseColor = BABYLON.BabylonColor3.FromHexString( "#ffff00" );
</code>
</pre>
<pre>
<code class="language-javascript">
const cylinder = BABYLON.MeshBuilder.CreateCylinder(
    "cylinder", 
    {
        height: 20, 
        diameterTop: 2.5, 
        diameterBottom: 2.5, 
        subdivisions: 32
    }, 
    scene
);
cylinder.material = myMaterial;
</code>
</pre>

## Avantages de Babylon.js .[babylon]

Code lisible

TypeScript

## Qu'est-ce qu'un Mesh ? .[babylon]

"Maillage"

Forme géométrique décomposée en triangle

<table>
<tr>
<td>
!image(assets/babylonjs/Final-Fnatasy-VII-Cloud-ps1.jpg | height="400px")
</td>
<td>
!image(assets/babylonjs/Parallax164-Mario-mesh.png | height="400px")
</td>
</tr>
</table>

## Les composantes d'un "mesh" .[babylon]

!image(assets/babylonjs/Mesh_overview.svg | style="background: white" width="1000px")

/*
sommet // vertex
Position (généralement dans l'espace 3D) accompagnée d'autres informations telles que la couleur, le vecteur normal et les coordonnées de texture.
arête // edge
Connexion entre deux sommets.
face
Un ensemble fermé d'arêtes.
Un polygone est un ensemble coplanaire de faces.
surfaces
Plus souvent appelées groupes de lissage.
*/